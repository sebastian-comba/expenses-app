# services:
#   db:
#     image: postgres
#     restart: always
#     environment:
#       POSTGRES_PASSWORD: password
#     volumes:
#       - pgdata:/var/lib/postgresql/data
#       - ./seed.sql:/docker-entrypoint-initdb.d
#     ports:
#       - 8080:8080

# volumes:
#   pgdata:

version: '3.9'

services:
  postgresql:
    image: postgres:15.2
    volumes:
      - ./initdb.d:/docker-entrypoint-initdb.d
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    expose:
      - 5432
    ports:
      - 5432:5432
    healthcheck:
      test: ['CMD', 'pg_isready']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - postgres-net

  pgadmin:
    image: dpage/pgadmin4:8.9
    restart: always
    volumes:
      - ./pgadmin-bootstrap/:/pgadmin4/bootstrap/
    depends_on:
      - postgresql
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_SERVER_JSON_FILE: ${PGADMIN_SERVER_JSON_FILE}
    ports:
      - 5050:80
    networks:
      - postgres-net

networks:
  postgres-net:
    driver: bridge

volumes:
  postgres-data:
    name: postgres-data
